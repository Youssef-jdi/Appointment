//
//  SideMenuRouterTests.swift
//  appointment
//
//  Created by Raluca Mesterca on 05/03/2020.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import appointment
import XCTest
import SwiftyMocky

class SideMenuRouterTests: XCTestCase {

    // MARK: Mocks
    private let mockViewController = SideMenuViewControllerProtocolMock()
    private let mockRootNavigator = RootNavigatorProtocolMock()
    private let mockStoryboard = StoryboardMock()

    var sut: SideMenuRouter!

    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()
        sut = createRouter()
    }

    override func tearDown() {
        sut = nil
        super.tearDown()
    }

    // MARK: Tests
    #warning("Todo: 2020-17-04, Sam - Fix this test")
    func testRouteToInvitations() {

//        let vc = InvitationViewController()
//        Given(mockStoryboard, .viewController(identifier: .any, willReturn: vc))
//
//        sut.route(to: .invitations)
//
//        Verify(mockStoryboard, .viewController(identifier: .matching({
//            return $0 as? InvitationStoryboardId == .invitation })))
//        Verify(mockRootNavigator, .setSideMenuRoot(contentViewController: .matching({
//            return $0 is ApplicationNavigationController
//        })))
    }

    func testRouteToAgenda() {
        let vc = HomeViewController()
        Given(mockStoryboard, .viewController(identifier: .any, willReturn: vc))

        sut.route(to: .agenda)

        Verify(mockStoryboard, .viewController(identifier: .matching({
            return $0 as? HomeStoryboardId == .home })))
        Verify(mockRootNavigator, .setSideMenuRoot(contentViewController: .matching({
            return $0 is ApplicationNavigationController
        })))

    }

}

// MARK: Privates
private extension SideMenuRouterTests {

    func createRouter() -> SideMenuRouter {
        let router = SideMenuRouter(
            rootNavigator: mockRootNavigator,
            homeStoryboard: mockStoryboard,
            invitationStoryboard: mockStoryboard,
            settingsStoryboard: mockStoryboard)

        router.set(viewController: mockViewController)
        return router
    }
}



