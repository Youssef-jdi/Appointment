//
//  SideMenuPresenterTests.swift
//  appointment
//
//  Created by Raluca Mesterca on 05/03/2020.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import appointment
import XCTest
import SwiftyMocky
import Moya

class SideMenuPresenterTests: XCTestCase {

    // MARK: Mocks
    private let mockViewController = SideMenuViewControllerProtocolMock()
    private var sut: SideMenuPresenter!

    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()

        sut = createPresenter()
    }

    override func tearDown() {
        sut = nil
        super.tearDown()
    }

    // MARK: Tests
    func testHandleError() {
        let error: MoyaError = .statusCode(.init(statusCode: 400, data: Data()))

        Matcher.default.register(Error.self) { lhs, rhs in
            return lhs.localizedDescription == rhs.localizedDescription
        }

        sut.handle(error: error)

        Verify(mockViewController, .display(error: .value(error)))
    }

    func testHandleRoutingError() {
        sut.handleUserIsAnon(error: .authNeeded)
        Verify(mockViewController, .handleUserIsAnon(.value(.authNeeded)))
    }

    func testHandleRoutingEnabled() {
        sut.handleRoutingEnabled(for: .invitations)
        Verify(mockViewController, .handleRoutingEnabled(for: .value(.invitations)))
    }
}

// MARK: - Privates
private extension SideMenuPresenterTests {

    func createPresenter() -> SideMenuPresenter {
        let presenter =  SideMenuPresenter()
        presenter.set(viewController: mockViewController)
        return presenter
    }
}


