//
//  CustomPopupWithTwoButtonsViewControllerTests.swift
//  appointment
//
//  Created by Youssef Jdidi on 5/14/20.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import appointment
import XCTest
import SwiftyMocky
import SnapshotTesting

class CustomPopupWithTwoButtonsViewControllerTests: XCTestCase {

    // MARK: - Test lifecycle
    override func setUp() {
        super.setUp()

        // always use iphone7 (Simulator) -> Snapshots
         record = SnapshotTestsRecordMode.environmentVariableMappingValue
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: - Tests
    func testLogoutSnapshot() {
        let sut: CustomPopupWithTwoButtonsViewController = createViewController()
        sut.set(popupType: .logoutPopup(email: "youssef@email.com"))
        sut.assertSnapshots()
    }
    
    func testCancelAppointmentNormal() {
        let sut: CustomPopupWithTwoButtonsViewController = createViewController()
        sut.set(popupType: .cancelAppointment)
        sut.assertSnapshots()
    }

    func testSelectDate() {
        let sut: CustomPopupWithTwoButtonsViewController = createViewController()
        let appointmentDateViewModel = AppointmentDateViewModel(date: "15 July 2020", start: "15h30", end: "16h00", respondedTo: true, unknown: "0", unavailable: "2", available: "2", availableInt: 1, unsure: "0", percentage: 0.5)
        sut.set(popupType: .dateConfirmed(date: appointmentDateViewModel))
        sut.assertSnapshots()
    }

    // Navigation Methods
    //i.e. backButtonTapped; delete this comment
}

// MARK: Privates
private extension CustomPopupWithTwoButtonsViewControllerTests {

    func createViewController() ->  CustomPopupWithTwoButtonsViewController {
        let vc = R.storyboard.customPopUp.customPopupWithTwoButtons()!
                vc.view.frame = .init(x: 0, y: 0, width: vc.view.frame.width, height: 1100)
                vc.lifecycle()
                return vc
    }
}
