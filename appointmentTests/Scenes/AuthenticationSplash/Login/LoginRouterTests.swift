////
//  LoginRouterTests.swift
//  appointment
//
//  Created by Raluca Mesterca on 18/02/2020.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import XCTest
import SwiftyMocky

@testable import appointment
class LoginRouterTests: XCTestCase {

    // MARK: - Mocks
    private let mockViewController = LoginViewControllerProtocolMock()
    private let mockRootNavigator = RootNavigatorProtocolMock()
    private let mockStoryboard = StoryboardMock()
    private let mockSyncStoryboard = StoryboardMock()
    private var sut: LoginRouter!

    // MARK: Setup/Teardown
     override func setUp() {
         super.setUp()
         sut = createRouter()
     }

     override func tearDown() {
         super.tearDown()
         sut = nil
     }

    // MARK: Tests
    func testRouteToLoginOverview() {
        sut.route(to: .loginOverView)
        Verify(mockViewController, .popToRoot(animated: .value(true)))
    }

    func testRouteToRegister() {
        let vc = RegisterViewController()
        Given(mockStoryboard, .viewController(identifier: .any, willReturn: vc))
        
        sut.route(to: .register)

        Verify(mockStoryboard, .viewController(identifier: .matching({ return $0 as? RegisterStoryboardId == .register
        })))
        Verify(mockViewController, .show(.value(vc), sender: .any))
    }

    func testRouteToForgetPassword() {
        let vc = ForgotPasswordViewController()
        Given(mockStoryboard, .viewController(identifier: .any, willReturn: vc))

        sut.route(to: .forgetPassword)

        Verify(mockStoryboard, .viewController(identifier: .matching({ return $0 as? ForgotPasswordStoryboard.ForgotPasswordStoryboardId == .forgotPassword })))
        Verify(mockViewController, .show(.value(vc), sender: .any))
    }

//    func testRouteToHome() {
//        let vc = HomeViewController()
//        let navVc = ApplicationNavigationController(rootViewController: vc)
//        Given(mockStoryboard, .viewController(identifier: .any, willReturn: vc))
//
//        sut.route(to: .home)
//
//        Verify(mockStoryboard, .viewController(identifier: .matching({ return $0 as? HomeStoryboardId == .home
//        })))
//
//        Verify(mockRootNavigator, .setSideMenuRoot(contentViewController: .value(navVc)))
//    }
}

// MARK: - Privates
private extension LoginRouterTests {
    
    func createRouter() -> LoginRouter {
        let router = LoginRouter(
            rootNavigator: mockRootNavigator,
            loginStoryboard: mockStoryboard,
            forgotPasswordStoryboard: mockStoryboard,
            registerStoryboard: mockStoryboard,
            homeStoryboard: mockStoryboard,
            syncStoryboard: mockSyncStoryboard)

        router.set(viewController: mockViewController)
        return router
    }
}
