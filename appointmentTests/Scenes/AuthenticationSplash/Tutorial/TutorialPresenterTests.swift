//
//  TutorialPresenterTests.swift
//  appointment
//
//  Created by Raluca Mesterca on 03/03/2020.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import appointment
import XCTest
import SwiftyMocky
import Moya

class TutorialPresenterTests: XCTestCase {

    // MARK: Mocks
    private let mockViewController = TutorialViewControllerProtocolMock()
    private var sut: TutorialPresenter!

    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()

        sut = createPresenter()
    }

    override func tearDown() {
        sut = nil
        super.tearDown()
    }

    // MARK: Tests
    func testHandleError() {
        let error: MoyaError = .statusCode(.init(statusCode: 400, data: Data()))

        Matcher.default.register(Error.self) { (lhs, rhs) -> Bool in
            return lhs.localizedDescription == rhs.localizedDescription
        }
        
        sut.handle(error: error)
        Verify(mockViewController, .display(error: .value(error)))
    }

    func testDisplayTutorialSlides() {
        let tutorials = Array(repeating: Tutorial.mock(), count: 5)

        sut.displayTutorialSlides(tutorials)
        Verify(mockViewController, .displayTutorialSlides(with: .value(tutorials)))

    }

    func testDisplayActivityIndicator() {
        sut.displayActivityIndicator(true)
        Verify(mockViewController, .displayActivityIndicator(.value(true)))

        sut.displayActivityIndicator(false)
        Verify(mockViewController, .displayActivityIndicator(.value(false)))
    }
}

// MARK: - Privates
private extension TutorialPresenterTests {

    func createPresenter() -> TutorialPresenter {
        let presenter =  TutorialPresenter()
        presenter.set(viewController: mockViewController)
        return presenter
    }
}


