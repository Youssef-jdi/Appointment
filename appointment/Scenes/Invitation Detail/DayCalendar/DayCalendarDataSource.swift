//
//  DayCalendarDataSource.swift
//  appointment
//
//  Created by Irina Filkovskaya on 08.07.2020.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DayCalendarDataSourceProtocol: UICollectionViewDataSource {
    func set(title: String?)
    func set(date: String)
    func set(items: [Int: [CalendarItem?]])
}

class DayCalendarDataSource: NSObject, DayCalendarDataSourceProtocol {
    // MARK: - Properties
    var title: String?
    var date: String?
    var items: [Int: [CalendarItem?]] = [:]
    
    func set(title: String?) {
        self.title = title ?? ""
    }
    
    func set(date: String) {
        self.date = date
    }
    
    func set(items: [Int: [CalendarItem?]]) {
        self.items = items
    }

    // MARK: - Collection View
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
    return 24
    }

    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: AddDateCollectionCell.identifier, for: indexPath) as? AddDateCollectionCell else {
             return UICollectionViewCell()
        }
        let hour = indexPath.row + 1
        cell.setup(time: String(hour))
        if !items.isEmpty, let hourEvents = items[hour] {
            cell.createGridViews(with: hourEvents, hour: hour)
        }
        return cell
    }

    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }

    func collectionView(
        _ collectionView: UICollectionView,
        viewForSupplementaryElementOfKind kind: String,
        at indexPath: IndexPath
    ) -> UICollectionReusableView {
        guard
            let headerView = collectionView.dequeueReusableSupplementaryView(
                ofKind: kind,
                withReuseIdentifier: "CollectionReusableView",
                for: indexPath) as? AddDateHeaderView,
            let title = title,
            let date = date
        else {
            return UICollectionReusableView()
        }
        headerView.configure(date: date, title: title)
        return headerView
    }
}
