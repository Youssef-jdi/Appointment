//
//  AddToAgendaViewController.swift
//  appointment
//
//  Created by Youssef Jdidi on 7/14/20.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol AddToAgendaViewControllerProtocol: class, UIViewControllerRouting {
    func set(interactor: AddToAgendaInteractorProtocol)
    func set(router: AddToAgendaRouterProtocol)

    // add the functions that are called from the presenter
    func display(error: Error)
}

class AddToAgendaViewController: UIViewController, AddToAgendaViewControllerProtocol {

    // MARK: DI
    var interactor: AddToAgendaInteractorProtocol?
    var router: AddToAgendaRouterProtocol?

    func set(interactor: AddToAgendaInteractorProtocol) {
        self.interactor = interactor
    }

    func set(router: AddToAgendaRouterProtocol) {
        self.router = router
    }

    // MARK: Outlets
    @IBOutlet weak var tableView: UITableView! {
        didSet {
            setupTableView()
        }
    }

    // MARK: Properties
    private var selectedCellRow: Int?
    private var data: [String] = [
        "10 minuten van te voren",
        "1 uur van te voren",
        "1 week van te voren",
        "Geen",
        "Aangepast..."
    ]

    // MARK: Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setUpNavigationBar()
    }

    // MARK: Actions

}

// MARK: Methods
extension AddToAgendaViewController {

    func display(error: Error) {
        Console.log(type: .error, error.localizedDescription)
    }
}

// MARK: - Privates
private extension AddToAgendaViewController {
    func setUpNavigationBar() {
        navigationItem.title = "Uitnodiging toevoegen"
        let klaarButton = UIBarButtonItem(
            title: "KLAAR",
            style: .plain,
            target: self,
            action: #selector(klaarButtonTapped))
        navigationItem.rightBarButtonItems = [klaarButton]
    }

    func setupTableView() {
        tableView.delegate = self
        tableView.dataSource = self
        tableView.register(UINib(resource: R.nib.addToAgendacell), forCellReuseIdentifier: R.nib.addToAgendacell.identifier)
    }
}

// MARK: @objc extension
@objc extension AddToAgendaViewController {
    func klaarButtonTapped() {
        guard let _ = self.selectedCellRow else { return }
        
    }
}

// MARK: DataSource and delegate
extension AddToAgendaViewController: UITableViewDataSource, UITableViewDelegate {

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 5
    }

    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let header = AddToAgendaHeader()
        header.backgroundColor = R.color.appLightGray()
        return header
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: R.reuseIdentifier.addToAgendaCell.identifier, for: indexPath) as? AddToAgendaCell else { return UITableViewCell() }
        cell.configure(with: data[indexPath.row], row: indexPath.row, delegate: self)
        return cell
    }

    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 60
    }

    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 50
    }
}

// MARK: cell delegate
extension AddToAgendaViewController: AddToAgendaDelegate {
    func select(at row: Int) {
        self.selectedCellRow = row
        tableView.reloadData()
    }
}
