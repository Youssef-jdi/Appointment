//
//  InvitationDetailPresenter.swift
//  appointment
//
//  Created by Youssef Jdidi on 3/5/20.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit
import Moya

//sourcery: AutoMockable
protocol InvitationDetailPresenterProtocol {
    //typealias = "RequestCompletion<T> = (Result<T, MoyaError>) -> Void"
    func set(viewController: InvitationDetailViewControllerProtocol?)
    
    // add the functions that are called from interactor
    func handle(error: Error)
    func presentCancelInvitationSuccess()
    func presentCancelInvitationFailure(error: MoyaError)
    func presentProposedDate(startDate: Date, endDate: Date)
    func presentProposedDatesIsEmpty()
}

class InvitationDetailPresenter: InvitationDetailPresenterProtocol {
    
    // MARK: DI
    weak var viewController: InvitationDetailViewControllerProtocol?
    private let dateFormatter: DateFormatterProtocol
    
    init(dateFormatter: DateFormatterProtocol) {
        self.dateFormatter = dateFormatter
    }
    
    func set(viewController: InvitationDetailViewControllerProtocol?) {
        self.viewController = viewController
    }
}

// MARK: Methods
extension  InvitationDetailPresenter {
    
    func handle(error: Error) {
        viewController?.display(error: error)
    }
    
    func presentCancelInvitationSuccess() {
        viewController?.displayCancelInvitationSuccess()
    }
    
    func presentCancelInvitationFailure(error: MoyaError) {
        viewController?.displayCancelInvitationFailure(error: error.localizedDescription)
    }
        
    func presentProposedDate(startDate: Date, endDate: Date) {
        let startDayString = dateFormatter.formatDate(date: startDate,
                                                      format: "dd MMMM yyyy")
        let startTimeString = dateFormatter.formatDate(date: startDate,
                                                       format: " HH:mm")
        let endTimeString = dateFormatter.formatDate(date: endDate,
                                                     format: " HH:mm")
        let dateString = startDayString + " van " + startTimeString + "-" + endTimeString
        // TODO: add loacalisable for eng/dutch later
        viewController?.displayProposedDate(dateString: dateString )
    }
    
    func presentProposedDatesIsEmpty() {
        viewController?.displayProposedDatesIsEmpty()
    }
}
