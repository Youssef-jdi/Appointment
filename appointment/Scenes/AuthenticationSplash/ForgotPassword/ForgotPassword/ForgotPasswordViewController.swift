//
//  ForgotPasswordViewController.swift
//  appointment
//
//  Created by Youssef Jdidi on 2/20/20.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

//sourcery: AutoMockable
protocol ForgotPasswordViewControllerProtocol: class, UIViewControllerRouting {
    func set(interactor: ForgotPasswordInteractorProtocol)
    func set(router: ForgotPasswordRouterProtocol)
    func set(alertPresenter: AlertPresenterProtocol)

    func displayValidationError(_ error: String)
    func displayValidationSuccess()
    
    func displayEmailSentSuccess()
    func displayEmailSentError(_ error: ForgotPasswordError)
}

class ForgotPasswordViewController: UIViewController, ForgotPasswordViewControllerProtocol {

    // MARK: DI
    var interactor: ForgotPasswordInteractorProtocol?
    var router: ForgotPasswordRouterProtocol?
    var alertPresenter: AlertPresenterProtocol?

    func set(interactor: ForgotPasswordInteractorProtocol) {
        self.interactor = interactor
    }

    func set(router: ForgotPasswordRouterProtocol) {
        self.router = router
    }
    
    func set(alertPresenter: AlertPresenterProtocol) {
        self.alertPresenter = alertPresenter
    }

    // MARK: Outlets
    @IBOutlet private weak var emailTextfield: CustomTextField! {
        didSet {
            emailTextfield.addTarget(self, action: #selector(textFieldDidChange(_:)), for: .editingChanged)
        }
    }
    @IBOutlet weak var descriptionLabel: UILabel!
    @IBOutlet private weak var sendButton: ButtonDoneRight! {
        didSet {
            sendButton.isEnabled = false
        }
    }
    @IBOutlet private weak var errorLabel: UILabel!
    // MARK: Properties

    // MARK: Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupTapToDismiss()
    }

    // MARK: Actions
    @IBAction private func sendButtonClicked(_ sender: Any) {
        displayConfirmPasswordRequest()
    }
}

// MARK: Methods
extension ForgotPasswordViewController {
    
    @objc func textFieldDidChange(_ textField: UITextField) {
        interactor?.handleTextFieldChange(email: textField.text)
    }
    
    func displayValidationError(_ error: String) {
        errorLabel.isHidden = false
        errorLabel.text = error
        sendButton.isEnabled = false
    }
    
    func displayValidationSuccess() {
        errorLabel.text = nil
        errorLabel.isHidden = true
        sendButton.isEnabled = true
    }
    
    func displayConfirmPasswordRequest() {
        alertPresenter?.presentAlert(
            title: "Success",
            description: "Are you sure you want to reset your password?",
            actions: [
                UIAlertAction(
                title: "Continue",
                style: .default,
                handler: { _ in
                    self.interactor?.sendEmail(email: self.emailTextfield.text)
                }),
                UIAlertAction(
                title: "Cancel",
                style: .default,
                handler: nil)
            ]
        )
    }
    
    func displayEmailSentSuccess() {
        alertPresenter?.presentAlert(
            title: "Success",
            description: "Email sent successfully",
            actions: [
                UIAlertAction(
                title: "OK",
                style: .default,
                handler: nil)
            ]
        )
    }
    
    func displayEmailSentError(_ error: ForgotPasswordError) {
        alertPresenter?.presentAlert(
            title: error.title,
            description: error.localizedDescription,
            actions: [
                UIAlertAction(
                    title: "OK",
                    style: .default,
                    handler: nil)
            ]
        )
    }
}
