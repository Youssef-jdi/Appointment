//
//  TutorialRouter.swift
//  appointment
//
//  Created by Rachel Polachova on 28/02/2020.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

//sourcery: AutoMockable
protocol TutorialRouterProtocol {
    func set(viewController: TutorialViewControllerProtocol?)
    
    func route(to scene: TutorialRouter.Scene)
}

class TutorialRouter: NSObject, TutorialRouterProtocol {
    
    // MARK: DI
    weak var viewController: TutorialViewControllerProtocol?
    private let rootNavigator: RootNavigatorProtocol
    private let destinationStoryboard: Storyboard
    
    func set(viewController: TutorialViewControllerProtocol?) {
        self.viewController = viewController
    }
    
    init(
        rootNavigator: RootNavigatorProtocol,
        destinationStoryboard: Storyboard
    ) {
        self.rootNavigator = rootNavigator
        self.destinationStoryboard = destinationStoryboard
    }
}

// MARK: Routing logic
extension TutorialRouter {
    
    enum Scene {
        case home
    }
    
    func route(to scene: TutorialRouter.Scene) {
        switch scene {
        case .home:
            /// TODO: Implement routing
            let identifier = HomeStoryboardId.home
            guard let homeVC = destinationStoryboard.viewController(identifier: identifier) as? HomeViewController else { return assertionFailure() }
            let navVC = ApplicationNavigationController(rootViewController: homeVC)
            rootNavigator.setSideMenuRoot(contentViewController: navVC)
        }
    }
}
