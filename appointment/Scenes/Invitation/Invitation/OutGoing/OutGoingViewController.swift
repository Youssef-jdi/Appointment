//
//  OutGoingViewController.swift
//  appointment
//
//  Created by Youssef Jdidi on 2/24/20.
//  Copyright (c) 2020 DTT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit
protocol OutGoingViewControllerDelegate: class {
    func goToDetail(appointment: Appointment?)
}

//sourcery: AutoMockable
protocol OutGoingViewControllerProtocol: class, UIViewControllerRouting {
    func set(interactor: OutGoingInteractorProtocol)
    func set(router: OutGoingRouterProtocol)
    func set(outGoingDataSource: [Appointment])

    // add the functions that are called from the presenter
    func displayLoadingView(display: Bool)
}

class OutGoingViewController: UIViewController, OutGoingViewControllerProtocol {

    // MARK: DI
    var interactor: OutGoingInteractorProtocol?
    var router: OutGoingRouterProtocol?
    var dataSource: InvitationDataSourceProtocol?

    weak var delegate: OutGoingViewControllerDelegate?

    func set(interactor: OutGoingInteractorProtocol) {
        self.interactor = interactor
    }

    func set(router: OutGoingRouterProtocol) {
        self.router = router
    }
    
    func set(dataSource: InvitationDataSourceProtocol) {
        self.dataSource = dataSource
    }

    // MARK: Outlets
    @IBOutlet weak var tableView: UITableView! {
        didSet {
            tableView.delegate = self
            tableView.dataSource = dataSource
        }
    }

    // MARK: Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)

        interactor?.getInvitations()
    }
}

// MARK: Methods
extension OutGoingViewController {
    
    func set(outGoingDataSource: [Appointment]) {
        dataSource?.set(data: outGoingDataSource)
        tableView.reloadData()
    }

    func displayLoadingView(display: Bool) {
        display ? showLoadingView() : hideLoadingView()
    }

    func showLoadingView() {
        UIViewController.showActivityIndicator()
        tableView.separatorStyle = .none
    }

    func hideLoadingView() {
        UIViewController.removeActivityIndicator()
        tableView.separatorStyle = .singleLine
    }
}

extension OutGoingViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        router?.route(to: .invitationDetail(invitation: dataSource?.data[indexPath.row]))
    }
}
